// Mocks generated by Mockito 5.3.2 from annotations
// in the_sss_store/test/screen/storage/storage_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:the_sss_store/repository/storage_repository.dart' as _i3;
import 'package:the_sss_store/screen/storage/storage_data.dart' as _i2;
import 'package:the_sss_store/screen/storage/storage_view_model.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStorageData_0 extends _i1.SmartFake implements _i2.StorageData {
  _FakeStorageData_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStorageRepository_1 extends _i1.SmartFake
    implements _i3.StorageRepository {
  _FakeStorageRepository_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [StorageViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockStorageViewModel extends _i1.Mock implements _i4.StorageViewModel {
  MockStorageViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get documentID => (super.noSuchMethod(
        Invocation.getter(#documentID),
        returnValue: '',
      ) as String);
  @override
  set documentID(String? _documentID) => super.noSuchMethod(
        Invocation.setter(
          #documentID,
          _documentID,
        ),
        returnValueForMissingStub: null,
      );
  @override
  String get storageName => (super.noSuchMethod(
        Invocation.getter(#storageName),
        returnValue: '',
      ) as String);
  @override
  set storageName(String? _storageName) => super.noSuchMethod(
        Invocation.setter(
          #storageName,
          _storageName,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set stateData(_i2.StorageData? value) => super.noSuchMethod(
        Invocation.setter(
          #stateData,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.StorageData get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: _FakeStorageData_0(
          this,
          Invocation.getter(#value),
        ),
      ) as _i2.StorageData);
  @override
  _i3.StorageRepository getStorageRepository() => (super.noSuchMethod(
        Invocation.method(
          #getStorageRepository,
          [],
        ),
        returnValue: _FakeStorageRepository_1(
          this,
          Invocation.method(
            #getStorageRepository,
            [],
          ),
        ),
      ) as _i3.StorageRepository);
  @override
  _i5.Future<void> init(
    String? documentID,
    String? storageName,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #init,
          [
            documentID,
            storageName,
          ],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showAddItemPopup() => super.noSuchMethod(
        Invocation.method(
          #showAddItemPopup,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showRemoveItemPopup() => super.noSuchMethod(
        Invocation.method(
          #showRemoveItemPopup,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void hidePopup() => super.noSuchMethod(
        Invocation.method(
          #hidePopup,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<bool> addItem(
    String? name,
    int? stock,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addItem,
          [
            name,
            stock,
          ],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> removeItem(String? name) => (super.noSuchMethod(
        Invocation.method(
          #removeItem,
          [name],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}
