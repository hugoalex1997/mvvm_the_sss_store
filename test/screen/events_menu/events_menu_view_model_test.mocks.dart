// Mocks generated by Mockito 5.3.2 from annotations
// in the_sss_store/test/screen/events_menu/events_menu_view_model_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:the_sss_store/model/event.dart' as _i3;
import 'package:the_sss_store/repository/events_menu_repository.dart' as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [EventsMenuRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsMenuRepository extends _i1.Mock
    implements _i2.EventsMenuRepository {
  MockEventsMenuRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  List<_i3.Event> getEventList() => (super.noSuchMethod(
        Invocation.method(
          #getEventList,
          [],
        ),
        returnValue: <_i3.Event>[],
      ) as List<_i3.Event>);
  @override
  _i4.Stream<List<_i3.Event>> observeEventList() => (super.noSuchMethod(
        Invocation.method(
          #observeEventList,
          [],
        ),
        returnValue: _i4.Stream<List<_i3.Event>>.empty(),
      ) as _i4.Stream<List<_i3.Event>>);
  @override
  _i4.Future<void> fetchEventList() => (super.noSuchMethod(
        Invocation.method(
          #fetchEventList,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  void createEvent(
    String? name,
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [
            name,
            startDate,
            endDate,
          ],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeEvent(String? name) => super.noSuchMethod(
        Invocation.method(
          #removeEvent,
          [name],
        ),
        returnValueForMissingStub: null,
      );
}
