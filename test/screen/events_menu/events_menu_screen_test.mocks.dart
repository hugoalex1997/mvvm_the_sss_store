// Mocks generated by Mockito 5.3.2 from annotations
// in the_sss_store/test/screen/events_menu/events_menu_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;
import 'dart:ui' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:the_sss_store/repository/events_menu_repository.dart' as _i3;
import 'package:the_sss_store/screen/events_menu/events_menu_data.dart' as _i2;
import 'package:the_sss_store/screen/events_menu/events_menu_view_model.dart'
    as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDateTime_0 extends _i1.SmartFake implements DateTime {
  _FakeDateTime_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventsMenuData_1 extends _i1.SmartFake
    implements _i2.EventsMenuData {
  _FakeEventsMenuData_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEventsMenuRepository_2 extends _i1.SmartFake
    implements _i3.EventsMenuRepository {
  _FakeEventsMenuRepository_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [EventsMenuViewModel].
///
/// See the documentation for Mockito's code generation for more information.
class MockEventsMenuViewModel extends _i1.Mock
    implements _i4.EventsMenuViewModel {
  MockEventsMenuViewModel() {
    _i1.throwOnMissingStub(this);
  }

  @override
  DateTime get startDate => (super.noSuchMethod(
        Invocation.getter(#startDate),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#startDate),
        ),
      ) as DateTime);
  @override
  set startDate(DateTime? _startDate) => super.noSuchMethod(
        Invocation.setter(
          #startDate,
          _startDate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  DateTime get endDate => (super.noSuchMethod(
        Invocation.getter(#endDate),
        returnValue: _FakeDateTime_0(
          this,
          Invocation.getter(#endDate),
        ),
      ) as DateTime);
  @override
  set endDate(DateTime? _endDate) => super.noSuchMethod(
        Invocation.setter(
          #endDate,
          _endDate,
        ),
        returnValueForMissingStub: null,
      );
  @override
  set stateData(_i2.EventsMenuData? value) => super.noSuchMethod(
        Invocation.setter(
          #stateData,
          value,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.EventsMenuData get value => (super.noSuchMethod(
        Invocation.getter(#value),
        returnValue: _FakeEventsMenuData_1(
          this,
          Invocation.getter(#value),
        ),
      ) as _i2.EventsMenuData);
  @override
  void setStartDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #setStartDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setEndDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #setEndDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i3.EventsMenuRepository getEventsMenuRepository() => (super.noSuchMethod(
        Invocation.method(
          #getEventsMenuRepository,
          [],
        ),
        returnValue: _FakeEventsMenuRepository_2(
          this,
          Invocation.method(
            #getEventsMenuRepository,
            [],
          ),
        ),
      ) as _i3.EventsMenuRepository);
  @override
  _i5.Future<void> init() => (super.noSuchMethod(
        Invocation.method(
          #init,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showCreateEventPopup() => super.noSuchMethod(
        Invocation.method(
          #showCreateEventPopup,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void showRemoveEventPopup() => super.noSuchMethod(
        Invocation.method(
          #showRemoveEventPopup,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void hidePopup() => super.noSuchMethod(
        Invocation.method(
          #hidePopup,
          [],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<bool> createEvent(String? name) => (super.noSuchMethod(
        Invocation.method(
          #createEvent,
          [name],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  _i5.Future<bool> removeEvent(String? name) => (super.noSuchMethod(
        Invocation.method(
          #removeEvent,
          [name],
        ),
        returnValue: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);
  @override
  void updateStartDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #updateStartDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void updateEndDate(DateTime? date) => super.noSuchMethod(
        Invocation.method(
          #updateEndDate,
          [date],
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i5.Future<String> getEventDocumentID(String? name) => (super.noSuchMethod(
        Invocation.method(
          #getEventDocumentID,
          [name],
        ),
        returnValue: _i5.Future<String>.value(''),
      ) as _i5.Future<String>);
  @override
  void addListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void removeListener(_i6.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );
}
